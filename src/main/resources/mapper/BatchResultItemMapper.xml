<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hand.hdsp.quality.infra.mapper.BatchResultItemMapper">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="com.hand.hdsp.quality.domain.entity.BatchResultItem">
        <result column="result_item_id" property="resultItemId" jdbcType="DECIMAL"/>
        <result column="result_rule_id" property="resultRuleId" jdbcType="DECIMAL"/>
        <result column="plan_line_id" property="planLineId" jdbcType="DECIMAL"/>
        <result column="condition_id" property="conditionId" jdbcType="DECIMAL"/>
        <result column="check_way" property="checkWay" jdbcType="VARCHAR"/>
        <result column="check_item" property="checkItem" jdbcType="VARCHAR"/>
        <result column="count_type" property="countType" jdbcType="VARCHAR"/>
        <result column="field_name" property="fieldName" jdbcType="VARCHAR"/>
        <result column="check_field_name" property="checkFieldName" jdbcType="VARCHAR"/>
        <result column="where_condition" property="whereCondition" jdbcType="VARCHAR"/>
        <result column="compare_way" property="compareWay" jdbcType="VARCHAR"/>
        <result column="regular_expression" property="regularExpression" jdbcType="VARCHAR"/>
        <result column="custom_sql" property="customSql" jdbcType="VARCHAR"/>
        <result column="rel_datasource_type" property="relDatasourceType" jdbcType="VARCHAR"/>
        <result column="rel_datasource_id" property="relDatasourceId" jdbcType="DECIMAL"/>
        <result column="rel_schema" property="relSchema" jdbcType="VARCHAR"/>
        <result column="rel_table_name" property="relTableName" jdbcType="VARCHAR"/>
        <result column="relationship" property="relationship" jdbcType="VARCHAR"/>
        <result column="warning_level_json" property="warningLevelJson" jdbcType="VARCHAR"/>
        <result column="actual_value" property="actualValue" jdbcType="VARCHAR"/>
        <result column="wave_rate" property="waveRate" jdbcType="VARCHAR"/>
        <result column="current_value" property="currentValue" jdbcType="VARCHAR"/>
        <result column="exception_info" property="exceptionInfo" jdbcType="VARCHAR"/>
        <result column="warning_level" property="warningLevel" jdbcType="VARCHAR"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="object_version_number" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="DECIMAL"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP"/>
        <result column="project_id" property="projectId" jdbcType="DECIMAL"/>
    </resultMap>

    <select id="selectByResultId" resultType="com.hand.hdsp.quality.api.dto.BatchResultItemDTO">
        select CASE
                   WHEN xbri.warning_level IS NOT NULL THEN xbri.warning_level
                   ELSE '${@com.hand.hdsp.quality.infra.constant.PlanConstant@WARNING_LEVEL_NORMAL}'
                   END warning_level,
               xbrr.weight
        from xqua_batch_result_item xbri
                 join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
                 join xqua_batch_result_base xbrb on xbrr.result_base_id = xbrb.result_base_id
                 join xqua_batch_result xbr on xbrb.result_id = xbr.result_id
        where xbr.result_id = #{resultId}
    </select>

    <select id="queryList" resultType="com.hand.hdsp.quality.infra.dataobject.BatchResultItemDO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>

        select xbri.current_value
        from xqua_batch_result_item xbri
        join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
        where xbri.current_value is not null
        and xbri.condition_id = #{conditionId}
        and xbrr.rule_type = #{ruleType}
        <choose>
            <when test="datasourceType == 'MYSQL'">
                <if test="measureDate != null">
                    and date_format(xbri.creation_date, '%Y%m%d') = date_format(#{measureDate}, '%Y%m%d')
                </if>
                <if test="measureDateFrom != null">
                    and date_format(xbri.creation_date, '%Y%m%d') &gt;= date_format(#{measureDateFrom}, '%Y%m%d')
                    and date_format(xbri.creation_date, '%Y%m%d') &lt;= date_format(date_sub(curdate(),interval 1 day), '%Y%m%d')
                </if>
            </when>
            <when test='datasourceType == "ORACLE" or datasourceType == "DM"'>
                <if test="measureDate != null">
                    and to_char(xbri.creation_date, 'yyyyMMdd') = to_char(#{measureDate}, 'yyyyMMdd')
                </if>
                <if test="measureDateFrom != null">
                    and to_char(xbri.creation_date, 'yyyyMMdd') &gt;= to_char(#{measureDateFrom}, 'yyyyMMdd')
                    and to_char(xbri.creation_date, 'yyyyMMdd') &lt;= to_char(SYSDATE-1, 'yyyyMMdd')
                </if>
            </when>
            <when test="datasourceType == 'PANWEI' or datasourceType == 'POSTGRESQL'">
                <if test="measureDate != null">
                    and to_char(xbri.creation_date, 'yyyymmdd') = to_char(#{measureDate}, 'yyyymmdd')
                </if>
                <if test="measureDateFrom != null">
                    and to_char(xbri.creation_date, 'yyyymmdd') &gt;= to_char(#{measureDateFrom}, 'yyyymmdd')
                    and to_char(xbri.creation_date, 'yyyymmdd') &lt;= to_char(current_date - interval '1' day), 'yyyymmdd')
                </if>
            </when>
        </choose>
        order by xbri.creation_date desc
    </select>

    <select id="selectWaringLevelByResultId" resultType="string">
        select distinct xbri.warning_level
        from xqua_batch_result_item xbri
                 join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
                 join xqua_batch_result_base xbrb on xbrr.result_base_id = xbrb.result_base_id
                 join xqua_batch_result xbr on xbrb.result_id = xbr.result_id
        where xbri.warning_level is not null
          and xbr.result_id = #{resultId}
    </select>

    <select id="listRuleError" resultType="com.hand.hdsp.quality.api.dto.BatchResultItemDTO">
        select xbri.result_item_id,
               xbri.result_rule_id,
               xbri.plan_line_id,
               xbri.condition_id,
               xbri.check_way,
               xbri.check_item,
               xbri.count_type,
               xbri.field_name,
               xbri.check_field_name,
               xbri.where_condition,
               xbri.compare_way,
               xbri.regular_expression,
               xbri.lov_code,
               xbri.custom_sql,
               xbri.rel_datasource_type,
               xbri.rel_datasource_id,
               xbri.rel_schema,
               xbri.rel_table_name,
               xbri.relationship,
               xbri.warning_level_json,
               xbri.actual_value,
               xbri.wave_rate,
               xbri.current_value,
               xbri.exception_info,
               xbri.warning_level,
               xbri.tenant_id,
               xbrr.rule_type,
               xbrr.rule_code,
               xbrr.rule_name,
               xbrr.rule_desc,
               xbrr.check_type,
               xbrr.weight,
               xbrb.object_name
        from xqua_batch_result_item xbri
                 join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
                 join xqua_batch_result_base xbrb on xbrr.result_base_id = xbrb.result_base_id
                 join xqua_batch_result xbr on xbrb.result_id = xbr.result_id
        <where>
            <if test="resultId != null">
                and xbr.result_id = #{resultId}
            </if>
            <if test="resultBaseId != null">
                and xbrb.result_base_id = #{resultBaseId}
            </if>
            <if test="tenantId != null">
                and xbri.tenant_id = #{tenantId}
            </if>
            <if test="ruleType != null and ruleType != ''">
                and xbrr.rule_type = #{ruleType}
            </if>
            <if test="ruleName != null and ruleName != ''">
                <bind name="ruleName" value="'%' + ruleName + '%'"/>
                and xbrr.rule_name like #{ruleName}
            </if>
            <if test="projectId !=null">
                and xbri.project_id=#{projectId}
            </if>
        </where>
    </select>

    <select id="selectWaringLevel" resultType="com.hand.hdsp.quality.infra.vo.ResultWaringVO">
        select
        xbri.warning_level warningLevel,
        count(xbri.warning_level) countSum
        from xqua_batch_result_item xbri
        join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
        <where>
            xbri.warning_level is not null
            <if test="tenantId != null ">
                and xbri.tenant_id = #{tenantId}
            </if>
            <if test="resultBaseId != null ">
                and xbrr.result_base_id = #{resultBaseId}
            </if>
        </where>
        GROUP BY xbri.warning_level
    </select>
    <select id="assetTable" resultType="com.hand.hdsp.quality.api.dto.BatchResultItemDTO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        SELECT
            xbri.result_rule_id,
            xbri.plan_line_id,
            xbri.condition_id,
            xbri.check_way,
            xbri.check_item,
            xbri.count_type,
            xbri.field_name,
            xbri.check_field_name,
            xbri.where_condition,
            xbri.compare_way,
            xbri.regular_expression,
            xbri.lov_code,
            xbri.rel_datasource_id,
            xbri.rel_schema,
            xbri.rel_table_name,
            xbri.relationship,
            xbri.warning_level_json,
            xbri.actual_value,
            xbri.wave_rate,
            xbri.current_value,
            xbri.warning_level,
            xbri.tenant_id,
            xbrr.rule_type,
            xbrr.rule_code,
            xbrr.rule_name,
            xbrr.rule_desc,
            xbrb.object_name,
            xbri.creation_date,
            xbp.plan_name,
            xbp.warning_code
        FROM
            xqua_batch_result_item xbri
            JOIN xqua_batch_result_rule xbrr ON xbri.result_rule_id = xbrr.result_rule_id
            JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
            JOIN xqua_batch_result xbr ON xbrb.result_id = xbr.result_id
            JOIN xqua_batch_plan_base xbpb ON xbpb.plan_base_id = xbrb.plan_base_id
            JOIN xqua_batch_plan xbp ON xbpb.plan_id = xbp.plan_id
        WHERE
            xbpb.sql_type = 'TABLE'
            <if test="datasourceId != null ">
                AND xbpb.datasource_id = #{datasourceId}
            </if>
            <if test="projectId != null">
                and xbri.project_id = #{projectId}
            </if>
            <if test="datasourceSchema != null ">
                AND xbpb.datasource_schema = #{datasourceSchema}
            </if>
            <if test="objectName != null ">
                AND xbpb.object_name = #{objectName}
            </if>
            <if test="fieldName !=null">
                <bind name="fieldNameLike1" value="'%,'+fieldName+'%'"/>
                <bind name="fieldNameLike2" value="fieldName+'%'"/>
                and (xbri.field_name LIKE #{fieldNameLike1} or xbri.field_name like  #{fieldNameLike2})
            </if>
    </select>
    <select id="selectWarningLevelByResultId" resultType="com.hand.hdsp.quality.infra.vo.ResultWaringVO">
            SELECT
	            warning_level,
	            exception_info
            FROM
	            xqua_batch_result_base xbrb
	        LEFT JOIN xqua_batch_result_rule xbrr
	        ON xbrb.result_base_id = xbrr.result_base_id
	        LEFT JOIN xqua_batch_result_item xbri
	        ON xbri.result_rule_id = xbrr.result_rule_id
            WHERE
	            result_id = #{resultId}
	            AND warning_level IS NOT NULL
    </select>
    <select id="selectWaringLevelJson" resultType="java.lang.String">
        select
        xbri.warning_level warningLevel
        from xqua_batch_result_item xbri
        join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
        <where>
            xbri.warning_level is not null
            <if test="tenantId != null ">
                and xbri.tenant_id = #{tenantId}
            </if>
            <if test="resultBaseId != null ">
                and xbrr.result_base_id = #{resultBaseId}
            </if>
        </where>
    </select>
    <select id="dataStandardWaringLevelVO" resultType="java.lang.String">
        SELECT
        xbri.warning_level
        FROM
        xqua_batch_result_rule xbrr
        JOIN xsta_data_standard xds ON xbrr.rule_code=xds.standard_code
        left JOIN xqua_batch_result_item xbri ON xbri.result_rule_id = xbrr.result_rule_id
        <where>
            xbrr.check_type='STANDARD'
            <if test="tenantId != null ">
                AND xbri.tenant_id = #{tenantId}
            </if>
            <if test="resultBaseId != null ">
                AND xbrr.result_base_id = #{resultBaseId}
            </if>
        </where>
    </select>
    <select id="selectMaxResultBaseId" resultType="java.lang.Long">
        SELECT
            MAX( result_base_id )
        FROM
            xqua_batch_result_base
        where plan_base_id = #{planBaseId} and project_id=#{projectId}
    </select>
</mapper>
