<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hand.hdsp.quality.infra.mapper.BatchResultMapper">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="com.hand.hdsp.quality.domain.entity.BatchResult">
        <result column="result_id" property="resultId" jdbcType="DECIMAL"/>
        <result column="plan_id" property="planId" jdbcType="DECIMAL"/>
        <result column="mark" property="mark" jdbcType="DECIMAL"/>
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP"/>
        <result column="end_date" property="endDate" jdbcType="TIMESTAMP"/>
        <result column="plan_status" property="planStatus" jdbcType="VARCHAR"/>
        <result column="next_count_date" property="nextCountDate" jdbcType="TIMESTAMP"/>
        <result column="exception_info" property="exceptionInfo" jdbcType="VARCHAR"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="object_version_number" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="DECIMAL"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Plan_And_Result">
        ${xbp}.plan_id,
        ${xbp}.plan_name,
        ${xbp}.plan_job_name,
        ${xbp}.warning_code,
        ${xbr}.result_id,
        ${xbr}.plan_status,
        ${xbr}.mark,
        ${xbr}.start_date,
        ${xbr}.end_date,
        ${xbr}.next_count_date,
        ${xbr}.exception_info
    </sql>

    <sql id="custom_where">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        <if test="tenantId != null">
            and ${mt}.tenant_id = #{tenantId}
        </if>
        <if test='datasourceType == "MYSQL"'>
            <if test="startDate != null and startDate != ''">
                and ${mt}.creation_date &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                and ${mt}.creation_date &lt;= #{endDate}
            </if>
        </if>
        <if test='datasourceType == "ORACLE"'>
            <if test="startDate != null and startDate != ''">
                and ${mt}.creation_date &gt;= to_date(  #{startDate},'yyyy-MM-dd HH24:mi:ss')
            </if>
            <if test="endDate != null and endDate != ''">
                and ${mt}.creation_date &lt;= to_date(  #{endDate},'yyyy-MM-dd HH24:mi:ss')
            </if>
        </if>
        <if test="datasourceId != null">
            and xbpb.datasource_id = #{datasourceId}
        </if>
        <if test="datasourceSchema != null and datasourceSchema != ''">
            and xbpb.datasource_schema = #{datasourceSchema}
        </if>
        <if test="objectName != null and objectName != ''">
            <bind name="objectNameExt" value="'%' + objectName + '%'"/>
            and xbpb.object_name like #{objectNameExt}
        </if>
    </sql>

    <select id="listByGroup" resultType="com.hand.hdsp.quality.api.dto.BatchResultDTO">
        SELECT xbp.plan_id,
        xbp.plan_name,
        xbp.plan_job_name,
        xbr.result_id,
        CASE
        WHEN xbr.plan_status IS NULL THEN
        '${@com.hand.hdsp.quality.infra.constant.PlanStatus@NOTACCESS}'
        ELSE xbr.plan_status
        END plan_status,
        xbr.mark,
        xbr.start_date,
        xbr.end_date,
        xbr.exception_info
        FROM xqua_batch_plan xbp
        LEFT JOIN (
        SELECT *
        FROM xqua_batch_result
        WHERE result_id IN (SELECT MAX(result_id) FROM xqua_batch_result GROUP BY plan_id)) xbr
        ON xbr.plan_id = xbp.plan_id
        LEFT JOIN xqua_plan_group xpg ON xbp.group_id = xpg.group_id
        <where>
            <if test="groupId != null and groupId != 0">
                xpg.group_id = #{groupId}
            </if>
            <if test="tenantId != null">
                and xbp.tenant_id = #{tenantId}
            </if>
            <if test="planName != null">
                <bind name="planName" value="'%' + planName + '%'"/>
                and xbp.plan_name like #{planName}
            </if>
        </where>
    </select>

    <select id="listResultHead" resultType="com.hand.hdsp.quality.api.dto.BatchResultDTO">
        select
        <include refid="Plan_And_Result">
            <property name="xbp" value="xbp"/>
            <property name="xbr" value="xbr"/>
        </include>
        from xqua_batch_plan xbp
        LEFT JOIN xqua_batch_result xbr
        on xbp.plan_id=xbr.plan_id
        <where>
            <if test="tenantId != null">
                xbr.tenant_id = #{tenantId}
            </if>
            <if test="planId != null">
                and xbr.plan_id = #{planId}
            </if>
            <if test="resultId != null">
                and xbr.result_id = #{resultId}
            </if>
        </where>
    </select>

    <select id="listHistory" resultType="com.hand.hdsp.quality.api.dto.BatchResultDTO">
        SELECT
        xbr.result_id,
        xbr.plan_status,
        xbr.mark,
        xbr.start_date,
        xbr.end_date,
        xbp.plan_name,
        SUM( xbrb.rule_count ) rule_count,
        SUM( xbrb.exception_rule_count ) exception_rule_count
        FROM
        xqua_batch_result xbr
        JOIN xqua_batch_plan xbp ON xbp.plan_id = xbr.plan_id
        LEFT JOIN xqua_batch_result_base xbrb ON xbr.result_id = xbrb.result_id
        <where>
            <if test="groupId != null and groupId != 0">
                and xbp.group_id = #{groupId}
            </if>
            <if test="tenantId != null">
                and xbr.tenant_id = #{tenantId}
            </if>
            <if test="planName">
                <bind name="planName" value="'%' + planName + '%'"/>
                and xbp.plan_name like #{planName}
            </if>
            <if test="planStatus != null">
                and xbr.plan_status = #{planStatus}
            </if>
        </where>
        GROUP BY
        xbr.result_id,
        xbr.plan_status,
        xbr.mark,
        xbr.start_date,
        xbr.end_date,
        xbp.plan_name
    </select>

    <select id="selectScore" resultType="long">
        select ROUND((case when avg(xbr.mark) is null then 0 else avg(xbr.mark) end ),1) mark
        from xqua_batch_result xbr
        join xqua_batch_result_base xbrb on xbr.result_id=xbrb.result_id
        join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbr"/>
            </include>
        </where>
    </select>

    <select id="selectRuleCount" resultType="long">
        select sum(ruleCount) ruleCount
        from (
        select count(*) ruleCount
        from xqua_batch_plan_table xbpt
        join xqua_batch_plan_base xbpb on xbpt.plan_base_id = xbpb.plan_base_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpt"/>
            </include>
        </where>
        union all
        select count(*) ruleCount
        from xqua_batch_plan_field xbpf
        join xqua_batch_plan_base xbpb on xbpf.plan_base_id = xbpb.plan_base_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpf"/>
            </include>
        </where>
        union all
        select count(*) ruleCount
        from xqua_batch_plan_rel_table xbprt
        join xqua_batch_plan_base xbpb on xbprt.plan_base_id = xbpb.plan_base_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbprt"/>
            </include>
        </where>
        ) a
    </select>

    <select id="selectWarningCount" resultType="long">
        select count(*) exceptionRuleCount
        from xqua_batch_result_item xbri
        join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
        join xqua_batch_result_base xbrb on xbrr.result_base_id = xbrb.result_base_id
        join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
        <where>
            and xbri.warning_level is not null
            <include refid="custom_where">
                <property name="mt" value="xbri"/>
            </include>
        </where>
    </select>

    <select id="listSuccessTypeCount" resultType="com.hand.hdsp.quality.infra.vo.CheckTypePercentageVO">
        SELECT
        xbrr.check_type,
        COUNT(*) count_sum
        FROM
        xqua_batch_result_rule xbrr
        JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
        JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
        WHERE
        result_flag = 1
        AND NOT EXISTS (
        SELECT
        1
        FROM
        xqua_batch_result_rule a
        WHERE
        a.rule_type = xbrr.rule_type
        AND a.plan_rule_id = xbrr.plan_rule_id
        AND a.creation_date > xbrr.creation_date
        )
        <include refid="custom_where">
            <property name="mt" value="xbrr"/>
        </include>
        GROUP BY
        xbrr.check_type
    </select>

    <select id="listAllTypeCount" resultType="com.hand.hdsp.quality.infra.vo.CheckTypePercentageVO">
        SELECT
        xbrr.check_type,
        COUNT(*) count_sum
        FROM
        xqua_batch_result_rule xbrr
        JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
        JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
        WHERE NOT EXISTS (
            SELECT
            1
            FROM
            xqua_batch_result_rule a
            WHERE
            a.rule_type = xbrr.rule_type
            AND a.plan_rule_id = xbrr.plan_rule_id
            AND a.creation_date > xbrr.creation_date
        )
        <include refid="custom_where">
            <property name="mt" value="xbrr"/>
        </include>
        GROUP BY
        xbrr.check_type
    </select>

    <select id="listMarkTrend" resultType="com.hand.hdsp.quality.infra.vo.MarkTrendVO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        <if test='datasourceType == "MYSQL"'>
            select date_format(xbr.end_date, '%Y-%m-%d') date,IFNULL(avg(xbr.mark),0) mark
            from xqua_batch_result xbr
            join xqua_batch_result_base xbrb on xbr.result_id=xbrb.result_id
            join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
            <where>
                and xbr.end_date is not null
                <include refid="custom_where">
                    <property name="mt" value="xbr"/>
                </include>
            </where>
            group by date_format(xbr.end_date, '%Y-%m-%d')
            order by date_format(xbr.end_date, '%Y-%m-%d')
        </if>
        <if test='datasourceType =="ORACLE"'>
            select TO_DATE(TO_CHAR(xbr.end_date, 'yyyy-MM-dd'), 'yyyy-MM-dd') "date",
            (case when avg(xbr.mark) is null then 0 else avg(xbr.mark) end )mark
            from xqua_batch_result xbr
            join xqua_batch_result_base xbrb on xbr.result_id=xbrb.result_id
            join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
            <where>
                and xbr.end_date is not null
                <include refid="custom_where">
                    <property name="mt" value="xbr"/>
                </include>
            </where>
            group by to_char(xbr.end_date, 'yyyy-MM-dd')
            order by to_char(xbr.end_date, 'yyyy-MM-dd')
        </if>
    </select>

    <select id="listRuleException" resultType="com.hand.hdsp.quality.infra.vo.RuleExceptionVO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        <if test='datasourceType == "MYSQL"'>
            select date_format(xbr.start_date, '%Y-%m-%d') date,
            xbrr.rule_type ruleType,
            IFNULL(SUM(xbrb.exception_rule_count),0) exceptionRuleCount
            from xqua_batch_result xbr
            INNER JOIN xqua_batch_result_base xbrb
            on xbr.result_id=xbrb.result_id
            INNER JOIN xqua_batch_result_rule xbrr
            on xbrb.result_base_id=xbrr.result_base_id
            join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
            <where>
                <include refid="custom_where">
                    <property name="mt" value="xbr"/>
                </include>
            </where>
            group by date_format(xbr.start_date, '%Y-%m-%d'),xbrr.rule_type
            order by date_format(xbr.start_date, '%Y-%m-%d')
        </if>
        <if test='datasourceType == "ORACLE"'>
            select TO_DATE(TO_CHAR(xbr.start_date, 'yyyy-MM-dd'), 'yyyy-MM-dd') "date",
            xbrr.rule_type ruleType,
            (case when SUM(xbrb.exception_rule_count) is null then 0 else SUM(xbrb.exception_rule_count) end ) exceptionRuleCount
            from xqua_batch_result xbr
            INNER JOIN xqua_batch_result_base xbrb
            on xbr.result_id=xbrb.result_id
            INNER JOIN xqua_batch_result_rule xbrr
            on xbrb.result_base_id=xbrr.result_base_id
            join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
            <where>
                <include refid="custom_where">
                    <property name="mt" value="xbr"/>
                </include>
            </where>
            group by to_char(xbr.start_date, 'yyyy-MM-dd'),xbrr.rule_type
            order by to_char(xbr.start_date, 'yyyy-MM-dd')
        </if>
    </select>

    <select id="listWarningLevel" resultType="com.hand.hdsp.quality.infra.vo.WarningLevelVO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        <choose>
            <when test='datasourceType == "ORACLE"'>
                select TO_DATE(TO_CHAR(xbr.start_date, 'yyyy-MM-dd'), 'yyyy-MM-dd') "date",
                xbri.warning_level warningLevel,
                count(xbri.warning_level) levelCount
                from xqua_batch_result xbr
                INNER JOIN xqua_batch_result_base xbrb
                on xbr.result_id=xbrb.result_id
                join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
                INNER JOIN xqua_batch_result_rule xbrr
                on xbrb.result_base_id=xbrr.result_base_id
                join xqua_batch_result_item xbri on xbrr.result_rule_id = xbri.result_rule_id
                <where>
                    and xbri.warning_level is not null
                    <include refid="custom_where">
                        <property name="mt" value="xbr"/>
                    </include>
                </where>
                group by to_char(xbr.start_date, 'yyyy-MM-dd'),xbri.warning_level
                order by to_char(xbr.start_date, 'yyyy-MM-dd')
            </when>
            <otherwise>
                select date_format(xbr.start_date, '%Y-%m-%d') date,
                xbri.warning_level warningLevel,
                count(xbri.warning_level) levelCount
                from xqua_batch_result xbr
                INNER JOIN xqua_batch_result_base xbrb
                on xbr.result_id=xbrb.result_id
                join xqua_batch_plan_base xbpb on xbrb.plan_base_id = xbpb.plan_base_id
                INNER JOIN xqua_batch_result_rule xbrr
                on xbrb.result_base_id=xbrr.result_base_id
                join xqua_batch_result_item xbri on xbrr.result_rule_id = xbri.result_rule_id
                <where>
                    and xbri.warning_level is not null
                    <include refid="custom_where">
                        <property name="mt" value="xbr"/>
                    </include>
                </where>
                group by date_format(xbr.start_date, '%Y-%m-%d'),xbri.warning_level
                order by date_format(xbr.start_date, '%Y-%m-%d')
            </otherwise>
        </choose>
    </select>

    <select id="errorTablePercentage" resultType="com.hand.hdsp.quality.infra.vo.ErrorTablePercentageVO">
        SELECT
        xbpb.object_name,
        COUNT(*) count_sum
        FROM
        xqua_batch_result_rule xbrr
        JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
        JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
        WHERE
        xbrr.result_flag = 0
        <include refid="custom_where">
            <property name="mt" value="xbrr"/>
        </include>
        GROUP BY
        xbpb.object_name
    </select>

    <select id="errorTableItemPercentage" resultType="com.hand.hdsp.quality.infra.vo.ErrorTablePercentageVO">
        SELECT
        a.check_item,
        a.count_type,
        COUNT(*) count_sum
        FROM
        (
        SELECT
        DISTINCT
        xbri.plan_line_id,
        xbri.check_item,
        xbri.count_type,
        xbrr.result_rule_id
        FROM
        xqua_batch_result_item xbri
        JOIN xqua_batch_result_rule xbrr ON xbri.result_rule_id = xbrr.result_rule_id
        JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
        JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
        WHERE
        xbri.warning_level IS NOT NULL
        AND xbpb.object_name = #{objectName}
        <include refid="custom_where">
            <property name="mt" value="xbrr"/>
        </include>
        ) a
        GROUP BY
        a.check_item,
        a.count_type

    </select>

    <select id="errorTableList" resultType="com.hand.hdsp.quality.infra.vo.ErrorTableListVO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        <choose>
            <when test='datasourceType == "ORACLE"'>
                SELECT
                xbpb.object_name,
                xbpb.datasource_id,
                concat(concat(xd.datasource_code,'.'),xbpb.datasource_schema) datasource_schema,
                COUNT(distinct xbri.result_rule_id) exception_rule_count,
                COUNT(distinct xbri.result_rule_id ||
                case when xbri.plan_line_id is null then 0 else xbri.plan_line_id end ||
                case when xbri.condition_id is null then 0 else xbri.condition_id end ) exception_item_count,
                COUNT(*) exception_warn_count
                FROM
                xqua_batch_result_item xbri
                JOIN xqua_batch_result_rule xbrr ON xbri.result_rule_id = xbrr.result_rule_id
                JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
                JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
                JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
                WHERE
                xbrr.result_flag = 0
                <include refid="custom_where">
                    <property name="mt" value="xbri"/>
                </include>
                GROUP BY
                xbpb.object_name,
                xbpb.datasource_id,
                xd.datasource_code,
                xbpb.datasource_schema
            </when>
            <otherwise>
                SELECT
                xbpb.object_name,
                xbpb.datasource_id,
                concat(concat(xd.datasource_code,'.'),xbpb.datasource_schema) datasource_schema,
                COUNT(distinct xbri.result_rule_id) exception_rule_count,
                COUNT(distinct xbri.result_rule_id ,
                case when xbri.plan_line_id is null then 0 else xbri.plan_line_id end ,
                case when xbri.condition_id is null then 0 else xbri.condition_id end ) exception_item_count,
                COUNT(*) exception_warn_count
                FROM
                xqua_batch_result_item xbri
                JOIN xqua_batch_result_rule xbrr ON xbri.result_rule_id = xbrr.result_rule_id
                JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
                JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
                JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
                WHERE
                xbrr.result_flag = 0
                <include refid="custom_where">
                    <property name="mt" value="xbri"/>
                </include>
                GROUP BY
                xbpb.object_name,
                xbpb.datasource_id,
                xd.datasource_code,
                xbpb.datasource_schema
            </otherwise>
        </choose>

    </select>

    <select id="errorTableItemList" resultType="com.hand.hdsp.quality.infra.vo.ErrorTableItemListVO">
        SELECT
        DISTINCT
        xbri.plan_line_id,
        xbri.check_item,
        xbri.count_type,
        xbri.where_condition,
        xbri.compare_way,
        xbri.exception_info,
        xbri.warning_level,
        xbri.warning_level_json,
        xbri.actual_value,
        xbrr.result_rule_id,
        xbrr.rule_name,
        xbr.start_date,
        xbp.plan_name
        FROM
        xqua_batch_result_item xbri
        JOIN xqua_batch_result_rule xbrr ON xbri.result_rule_id = xbrr.result_rule_id
        JOIN xqua_batch_result_base xbrb ON xbrr.result_base_id = xbrb.result_base_id
        JOIN xqua_batch_plan_base xbpb ON xbrb.plan_base_id = xbpb.plan_base_id
        join xqua_batch_result xbr on xbrb.result_id = xbr.result_id
        join xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        WHERE
        xbri.warning_level IS NOT NULL
        AND xbpb.object_name = #{objectName}
        <include refid="custom_where">
            <property name="mt" value="xbri"/>
        </include>

    </select>

    <select id="ruleList" resultType="com.hand.hdsp.quality.api.dto.BatchPlanFieldDTO">
        SELECT
        '表级' rule_type,
        xbpt.rule_code,
        xbpt.rule_name,
        xbpt.rule_desc,
        xbpt.check_type,
        xbpt.exception_block,
        xbpt.weight,
        xbpt.tenant_id,
        xbpt.creation_date,
        xbpb.datasource_type,
        xbpb.datasource_id,
        xd.datasource_code as datasourceName,
        xbpb.datasource_schema,
        xbpb.sql_type,
        xbpb.object_name,
        xbpb.description,
        xbpb.increment_strategy,
        xbpb.increment_column,
        xbpb.where_condition,
        xbp.plan_name
        FROM
        xqua_batch_plan_table xbpt
        JOIN xqua_batch_plan_base xbpb ON xbpt.plan_base_id = xbpb.plan_base_id
        JOIN xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpt"/>
            </include>
        </where>
        union all
        SELECT
        '字段级' rule_type,
        xbpt.rule_code,
        xbpt.rule_name,
        xbpt.rule_desc,
        xbpt.check_type,
        xbpt.exception_block,
        xbpt.weight,
        xbpt.tenant_id,
        xbpt.creation_date,
        xbpb.datasource_type,
        xbpb.datasource_id,
        xd.datasource_code as datasourceName,
        xbpb.datasource_schema,
        xbpb.sql_type,
        xbpb.object_name,
        xbpb.description,
        xbpb.increment_strategy,
        xbpb.increment_column,
        xbpb.where_condition,
        xbp.plan_name
        FROM
        xqua_batch_plan_field xbpt
        JOIN xqua_batch_plan_base xbpb ON xbpt.plan_base_id = xbpb.plan_base_id
        JOIN xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpt"/>
            </include>
        </where>
        union all
        SELECT
        '表间关系' rule_type,
        xbpt.rule_code,
        xbpt.rule_name,
        xbpt.rule_desc,
        xbpt.check_type,
        xbpt.exception_block,
        xbpt.weight,
        xbpt.tenant_id,
        xbpt.creation_date,
        xbpb.datasource_type,
        xbpb.datasource_id,
        xd.datasource_code as datasourceName,
        xbpb.datasource_schema,
        xbpb.sql_type,
        xbpb.object_name,
        xbpb.description,
        xbpb.increment_strategy,
        xbpb.increment_column,
        xbpb.where_condition,
        xbp.plan_name
        FROM
        xqua_batch_plan_rel_table xbpt
        JOIN xqua_batch_plan_base xbpb ON xbpt.plan_base_id = xbpb.plan_base_id
        JOIN xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpt"/>
            </include>
        </where>
    </select>

    <select id="itemList" resultType="com.hand.hdsp.quality.api.dto.BatchPlanFieldDTO">
        SELECT
        '表级' rule_type,
        xbpt.plan_rule_id,
        xbpt.rule_code,
        xbpt.rule_name,
        xbpt.rule_desc,
        xbpt.check_type,
        xbpt.exception_block,
        xbpt.weight,
        null check_way,
        xbptl.check_item,
        xbptl.count_type,
        null field_name,
        null check_field_name,
        null regular_expression,
        xbptl.custom_sql,
        xbptc.condition_id,
        xbptc.where_condition,
        xbptc.compare_way,
        xbptc.warning_level,
        xbptc.creation_date,
        xd.datasource_code as datasourceName,
        xbpb.datasource_schema,
        xbpb.object_name,
        xbp.plan_name
        from xqua_batch_plan_table_con xbptc
        join xqua_batch_plan_table_line xbptl on xbptc.plan_line_id = xbptl.plan_line_id
        join xqua_batch_plan_table xbpt on xbptl.plan_rule_id = xbpt.plan_rule_id
        JOIN xqua_batch_plan_base xbpb ON xbpt.plan_base_id = xbpb.plan_base_id
        JOIN xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbptc"/>
            </include>
        </where>
        union all
        SELECT
        '字段级' rule_type,
        xbpf.plan_rule_id,
        xbpf.rule_code,
        xbpf.rule_name,
        xbpf.rule_desc,
        xbpf.check_type,
        xbpf.exception_block,
        xbpf.weight,
        xbptl.check_way,
        xbptl.check_item,
        xbptl.count_type,
        xbptl.field_name,
        xbptl.check_field_name,
        xbptl.regular_expression,
        null custom_sql,
        xbpfc.condition_id,
        xbpfc.where_condition,
        xbpfc.compare_way,
        xbpfc.warning_level,
        xbpfc.creation_date,
        xd.datasource_code as datasourceName,
        xbpb.datasource_schema,
        xbpb.object_name,
        xbp.plan_name
        from xqua_batch_plan_field_con xbpfc
        join xqua_batch_plan_field_line xbptl on xbpfc.plan_line_id = xbptl.plan_line_id
        join xqua_batch_plan_field xbpf on xbptl.plan_rule_id = xbpf.plan_rule_id
        JOIN xqua_batch_plan_base xbpb ON xbpf.plan_base_id = xbpb.plan_base_id
        JOIN xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpfc"/>
            </include>
        </where>
        union all
        SELECT
        '表间关系' rule_type,
        xbpt.plan_rule_id,
        xbpt.rule_code,
        xbpt.rule_name,
        xbpt.rule_desc,
        xbpt.check_type,
        xbpt.exception_block,
        xbpt.weight,
        null check_way,
        null check_item,
        null count_type,
        null field_name,
        null check_field_name,
        null regular_expression,
        null custom_sql,
        null condition_id,
        null where_condition,
        null compare_way,
        null warning_level,
        xbpt.creation_date,
        xd.datasource_code datasource_name,
        xbpb.datasource_schema,
        xbpb.object_name,
        xbp.plan_name
        FROM
        xqua_batch_plan_rel_table xbpt
        JOIN xqua_batch_plan_base xbpb ON xbpt.plan_base_id = xbpb.plan_base_id
        JOIN xqua_batch_plan xbp on xbpb.plan_id = xbp.plan_id
        JOIN hpfm_datasource xd ON xd.datasource_id = xbpb.datasource_id
        <where>
            <include refid="custom_where">
                <property name="mt" value="xbpt"/>
            </include>
        </where>
    </select>


    <select id="errorRuleList" resultType="com.hand.hdsp.quality.api.dto.BatchResultItemDTO">
        select xbri.result_item_id,
        xbri.result_rule_id,
        xbri.plan_line_id,
        xbri.condition_id,
        xbri.check_way,
        xbri.check_item,
        xbri.count_type,
        xbri.field_name,
        xbri.check_field_name,
        xbri.where_condition,
        xbri.compare_way,
        xbri.regular_expression,
        xbri.lov_code,
        xbri.custom_sql,
        xbri.rel_datasource_type,
        xbri.rel_datasource_id,
        xbri.rel_schema,
        xbri.rel_table_name,
        xbri.relationship,
        xbri.warning_level_json,
        xbri.actual_value,
        xbri.wave_rate,
        xbri.current_value,
        xbri.exception_info,
        xbri.warning_level,
        xbri.tenant_id,
        xbrr.rule_type,
        xbrr.rule_code,
        xbrr.rule_name,
        xbrr.rule_desc,
        xbrr.check_type,
        xbrr.weight,
        xbrb.object_name
        from xqua_batch_result_item xbri
        join xqua_batch_result_rule xbrr on xbri.result_rule_id = xbrr.result_rule_id
        join xqua_batch_result_base xbrb on xbrr.result_base_id = xbrb.result_base_id
        join xqua_batch_result xbr on xbrb.result_id = xbr.result_id
        <where>
            and xbri.warning_level is not null
            and xbrr.rule_type = #{ruleType}
            <include refid="custom_where">
                <property name="mt" value="xbri"/>
            </include>
        </where>
    </select>
    <select id="selectByPlanId" resultType="com.hand.hdsp.quality.api.dto.BatchResultDTO">
        SELECT
	    xbr.result_id,
	    xbr.plan_id,
	    xbp.plan_name,
        xbr.mark,
        xbr.start_date,
        xbr.end_date,
        xbr.plan_status,
        xbr.next_count_date,
        xbr.exception_info,
        xbr.tenant_id
        FROM
        xqua_batch_result xbr
        left join xqua_batch_plan xbp on xbr.plan_id=xbp.plan_id
        WHERE
	    xbr.result_id IN (
	            SELECT max( result_id ) FROM xqua_batch_result WHERE plan_id = #{planId}
	        )
    </select>
    <select id="listResultDetail" resultType="com.hand.hdsp.quality.api.dto.BatchResultMarkDTO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        <choose>
            <when test='datasourceType == "ORACLE"'>
                SELECT avg(mark) avgMark,
                to_char(end_date,'yyyy-MM-dd') "day"
                FROM xqua_batch_result
                <where>
                    <if test="planId!=null and planId != ''">
                        plan_id=#{planId}
                    </if>
                    <if test="tenantId !=null and tenantId !=''">
                        and tenant_id=#{tenantId}
                    </if>
                </where>
                group by to_char(end_date,'yyyy-MM-dd')
            </when>
            <otherwise>
                SELECT avg(mark) avgMark,
                DATE_FORMAT(end_date,'%Y-%m-%d') day
                FROM xqua_batch_result
                <where>
                    <if test="planId!=null and planId != ''">
                        plan_id=#{planId}
                    </if>
                    <if test="tenantId !=null and tenantId !=''">
                        and tenant_id=#{tenantId}
                    </if>
                </where>
                group by day
            </otherwise>
        </choose>
    </select>

    <select id="problemTrigger" resultType="com.hand.hdsp.quality.infra.vo.ProblemTriggerVO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        SELECT
        xp.problem_id,
        xp.problem_name,
        xcr.rule_type,
        xcr.column_type,
        a.field_name
        FROM
        xqua_problem xp
        JOIN xqua_suggest xs ON xs.problem_id = xp.problem_id
        JOIN xqua_check_rule xcr ON xcr.rule_id = xs.rule_id
        JOIN (
            SELECT
            xbri.check_way,
            xbri.check_item,
            xbri.count_type,
            xbri.field_name,
            xbrr.rule_type,
            xbri.creation_date
            FROM
            xqua_batch_result_item xbri
            LEFT JOIN xqua_batch_result_rule xbrr ON xbri.result_rule_id = xbrr.result_rule_id
            where xbri.tenant_id = #{tenantId}
            <if test='datasourceType == "MYSQL"'>
                <if test="startDate != null and startDate != ''">
                    and xbri.creation_date &gt;= #{startDate}
                </if>
                <if test="endDate != null and endDate != ''">
                    and xbri.creation_date &lt;= #{endDate}
                </if>
            </if>
            <if test='datasourceType == "ORACLE"'>
                <if test="startDate != null and startDate != ''">
                    and xbri.creation_date &gt;= to_date(  #{startDate},'yyyy-MM-dd HH24:mi:ss')
                </if>
                <if test="endDate != null and endDate != ''">
                    and xbri.creation_date &lt;= to_date(  #{endDate},'yyyy-MM-dd HH24:mi:ss')
                </if>
            </if>) a
        ON ( a.rule_type = xcr.rule_type AND a.check_item = xcr.check_item )
        WHERE xp.tenant_id = #{tenantId}
    </select>
    <select id="selectProblemTrend" resultType="com.hand.hdsp.quality.api.dto.TimeRangeDTO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        select
            A.groupName dateGroup,
            xbri.warning_level
        from
        (
            select
                <if test='datasourceType == "MYSQL"'>
                    DATE_FORMAT( xbrb.last_update_date, '%Y-%m-%d' ) groupName,
                </if>
                <if test='datasourceType == "ORACLE"'>
                    to_char( xbrb.last_update_date, 'yyyy-MM-dd' ) groupName,
                </if>
                MAX(result_base_id) lastId
            from xqua_batch_result_base xbrb
            where xbrb.plan_base_id = #{planBaseId}
            <if test='datasourceType == "MYSQL"'>
                <if test="startDate != null and startDate != ''">
                    and xbrb.last_update_date &gt;= #{startDate}
                </if>
                <if test="endDate != null and endDate != ''">
                    and xbrb.last_update_date &lt;= #{endDate}
                </if>
            </if>
            <if test='datasourceType == "ORACLE"'>
                <if test="startDate != null and startDate != ''">
                    and xbrb.last_update_date &gt;= to_date(  #{startDate},'yyyy-MM-dd HH24:mi:ss')
                </if>
                <if test="endDate != null and endDate != ''">
                    and xbrb.last_update_date &lt;= to_date(  #{endDate},'yyyy-MM-dd HH24:mi:ss')
                </if>
            </if>
            GROUP BY
            <if test='datasourceType == "MYSQL"'>
                DATE_FORMAT( xbrb.last_update_date, '%Y-%m-%d' )
            </if>
            <if test='datasourceType == "ORACLE"'>
                to_char( xbrb.last_update_date, 'yyyy-MM-dd' )
            </if>
        ) A
        LEFT JOIN xqua_batch_result_rule xbrr ON xbrr.result_base_id = A.lastId
        LEFT JOIN xqua_batch_result_item xbri ON xbri.result_rule_id = xbrr.result_rule_id
        where xbri.warning_level is not null
    </select>
    <select id="selectProblemWithIncre" resultType="com.hand.hdsp.quality.api.dto.TimeRangeDTO">
        <bind name="datasourceType" value="@com.hand.hdsp.core.util.SpringDatasourceHelper@getDatasourceType()"/>
        SELECT
            <if test='datasourceType == "MYSQL"'>
                DATE_FORMAT( xbrb.last_update_date,'%Y-%m-%d') dateGroup,
            </if>
            <if test='datasourceType == "ORACLE"'>
                to_char( xbrb.last_update_date, 'yyyy-MM-dd' ) dateGroup,
            </if>
            xbri.warning_level
        FROM
            xqua_batch_result_base xbrb
            LEFT JOIN xqua_batch_result_rule xbrr ON xbrr.result_base_id = xbrb.result_base_id
            LEFT JOIN xqua_batch_result_item xbri ON xbri.result_rule_id = xbrr.result_rule_id
        WHERE
            xbrb.plan_base_id = #{planBaseId}
            <if test='datasourceType == "MYSQL"'>
                <if test="startDate != null and startDate != ''">
                    and xbrb.last_update_date &gt;= #{startDate}
                </if>
                <if test="endDate != null and endDate != ''">
                    and xbrb.last_update_date &lt;= #{endDate}
                </if>
            </if>
            <if test='datasourceType == "ORACLE"'>
                <if test="startDate != null and startDate != ''">
                    and xbrb.last_update_date &gt;= to_date(  #{startDate},'yyyy-MM-dd HH24:mi:ss')
                </if>
                <if test="endDate != null and endDate != ''">
                    and xbrb.last_update_date &lt;= to_date(  #{endDate},'yyyy-MM-dd HH24:mi:ss')
                </if>
            </if>
            AND xbri.warning_level IS NOT NULL
    </select>
</mapper>
